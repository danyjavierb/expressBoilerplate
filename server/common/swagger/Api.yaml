swagger: "2.0"
info:
  version: 1.0.0
  title: expressBoilerplate
  description: Express boilerplate
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json

definitions:
  ExampleBody:
    type: object
    title: example
    required:
      - name
    properties:
      name:
        type: string
        description: The example name
  Product:
    type: "object"
    properties:
      name:
        type: "string"
      unit_price:
        type: "integer"
      description:
        type: "string"
      categories:
        type: "array"
        items:
          type: string
      images:
        type: "array"
        items:
          type: string


paths:
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Examples
      description: Create a new example
      parameters:
        - name: example
          in: body
          description: number of items to skip
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        200:
          description: Returns all examples
  /product:
    get:
      tags:
        - Products
      description: Fetch all products
      summary: "Fetch all products"
      responses:
        200:
          description: Returns all products
    post:
      tags:
        - Products
      description: Fetch all products
      summary: "Create product"
      parameters:
        - in: "body"
          name: "body"
          description: "Created new product "
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        default:
          description: "successful operation"

  /category:
    get:
      tags:
        - Categories
      description: Fetch all categories
      summary: "Fetch all categories"
      responses:
        200:
          description: Returns all categories
  /health-check:
    get:
      tags:
        - Health
      description: Check api health status
      responses:
        200:
          description: Returns OK
  /product/category/{categoryId}:
    get:
      tags:
        - Products
      summary: "Find products  by Category ID"
      description: Fetch all products by category ID
      parameters:
        - name: "categoryId"
          in: "path"
          description: "ID of category"
          required: true
          type: "string"
      responses:
        200:
          description: "successful fetch of products"
        400:
          description: "Invalid ID supplied"
  /product/{productId}:
    get:
      tags:
        - Products
      summary: "Find product  by  ID"
      description: Fetch  product by  ID
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of product"
          required: true
          type: "string"
      responses:
        200:
          description: "successful fetch of product"
        400:
          description: "Invalid ID supplied"
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification